{"ast":null,"code":"var _jsxFileName = \"/Users/sachinsharma/evoting-react/Frontend/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Redirect, withRouter } from 'react-router-dom';\nimport './App.css';\nimport Routes from './AppRoutes/Routes';\nimport Navbar from './Navbar/Navbar';\nimport * as actions from './redux/actions/index';\n\nconst App = props => {\n  const {\n    onTryAutoSignup,\n    isAuthenticated,\n    username\n  } = props;\n  useEffect(() => {\n    onTryAutoSignup();\n  }, [onTryAutoSignup]);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    username: username,\n    isAuthenticated: isAuthenticated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Routes, {\n    isAuthenticated: isAuthenticated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    from: \"/\",\n    to: \"/Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    username: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/sachinsharma/evoting-react/Frontend/src/App.js"],"names":["React","useEffect","connect","Switch","Redirect","withRouter","Routes","Navbar","actions","App","props","onTryAutoSignup","isAuthenticated","username","mapStateToProps","state","auth","token","userId","mapDispatchToProps","dispatch","authCheckState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAM;AAAEC,IAAAA,eAAF;AAAkBC,IAAAA,eAAlB;AAAkCC,IAAAA;AAAlC,MAA+CH,KAArD;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,eAAe;AAChB,GAFQ,EAEN,CAACA,eAAD,CAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAGE,QAAnB;AAA6B,IAAA,eAAe,EAAED,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,eAAe,EAAEA,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,EAAE,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CADF;AAUD,CAhBD;;AAkBA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLH,IAAAA,eAAe,EAAEG,KAAK,CAACC,IAAN,CAAWC,KAAX,KAAqB,IADjC;AAELJ,IAAAA,QAAQ,EAAEE,KAAK,CAACC,IAAN,CAAWE;AAFhB,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLT,IAAAA,eAAe,EAAE,MAAMS,QAAQ,CAACZ,OAAO,CAACa,cAAR,EAAD;AAD1B,GAAP;AAGD,CAJD;;AAMA,eAAehB,UAAU,CACvBH,OAAO,CACLY,eADK,EAELK,kBAFK,CAAP,CAGEV,GAHF,CADuB,CAAzB","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport { Switch,Redirect, withRouter } from 'react-router-dom';\nimport './App.css';\nimport Routes from './AppRoutes/Routes';\nimport Navbar from './Navbar/Navbar';\nimport * as actions from './redux/actions/index';\n\nconst App = (props) => {\n  const { onTryAutoSignup,isAuthenticated,username } = props;\n  useEffect(() => {\n    onTryAutoSignup();\n  }, [onTryAutoSignup]);\n\n  return (\n    <div className=\"App\">\n      <Navbar username ={username} isAuthenticated={isAuthenticated}/>\n      <Switch>\n      <Routes isAuthenticated={isAuthenticated} />\n        <Redirect from=\"/\" to=\"/Login\" />\n      </Switch>\n    </div>\n\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    username: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n"]},"metadata":{},"sourceType":"module"}