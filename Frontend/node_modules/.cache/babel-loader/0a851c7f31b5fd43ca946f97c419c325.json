{"ast":null,"code":"var _jsxFileName = \"/Users/sachinsharma/evoting-react/Frontend/src/Root.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducers from './redux/reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst Root = ({\n  children,\n  shouldLog,\n  initialState,\n  middlewares = []\n}) => {\n  const logger = createLogger();\n  let middleware = [];\n\n  if (process.env.NODE_ENV === 'development') {\n    middleware = [...middleware, thunk, logger];\n  } else {\n    middleware = [...middleware, thunk];\n  }\n\n  const enhancer = composeWithDevTools(applyMiddleware(...middleware));\n  const store = createStore(reducers, initialState, enhancer);\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, children);\n};\n\nRoot.propTypes = {\n  children: PropTypes.any,\n  shouldLog: PropTypes.bool,\n  initialState: PropTypes.object,\n  middlewares: PropTypes.array\n};\nexport default Root;","map":{"version":3,"sources":["/Users/sachinsharma/evoting-react/Frontend/src/Root.js"],"names":["React","PropTypes","Provider","applyMiddleware","createStore","createLogger","thunk","reducers","composeWithDevTools","Root","children","shouldLog","initialState","middlewares","logger","middleware","process","env","NODE_ENV","enhancer","store","propTypes","any","bool","object","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,QADJ,QAEO,aAFP;AAGA,SACIC,eADJ,EAEIC,WAFJ,QAGO,OAHP;AAIA,SACIC,YADJ,QAEO,cAFP;AAGA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACVC,EAAAA,QADU;AAEVC,EAAAA,SAFU;AAGVC,EAAAA,YAHU;AAIVC,EAAAA,WAAW,GAAG;AAJJ,CAAD,KAKP;AACF,QAAMC,MAAM,GAAGT,YAAY,EAA3B;AAEA,MAAIU,UAAU,GAAG,EAAjB;;AACA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,IAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAgBT,KAAhB,EAAuBQ,MAAvB,CAAb;AACH,GAFD,MAEO;AACHC,IAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAgBT,KAAhB,CAAb;AACH;;AAED,QAAMa,QAAQ,GAAGX,mBAAmB,CAACL,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CAApC;AACA,QAAMK,KAAK,GAAGhB,WAAW,CAACG,QAAD,EAAWK,YAAX,EAAyBO,QAAzB,CAAzB;AAEA,SAAO,oBAAC,QAAD;AACH,IAAA,KAAK,EAAEC,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGCV,QAHD,CAAP;AAMH,CAxBD;;AA0BAD,IAAI,CAACY,SAAL,GAAiB;AACbX,EAAAA,QAAQ,EAAET,SAAS,CAACqB,GADP;AAEbX,EAAAA,SAAS,EAAEV,SAAS,CAACsB,IAFR;AAGbX,EAAAA,YAAY,EAAEX,SAAS,CAACuB,MAHX;AAIbX,EAAAA,WAAW,EAAEZ,SAAS,CAACwB;AAJV,CAAjB;AAOA,eAAehB,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Provider\n} from 'react-redux';\nimport {\n    applyMiddleware,\n    createStore\n} from 'redux';\nimport {\n    createLogger\n} from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducers from './redux/reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst Root = ({\n    children,\n    shouldLog,\n    initialState,\n    middlewares = []\n}) => {\n    const logger = createLogger();\n\n    let middleware = [];\n    if (process.env.NODE_ENV === 'development') {\n        middleware = [...middleware, thunk, logger];\n    } else {\n        middleware = [...middleware, thunk];\n    }\n\n    const enhancer = composeWithDevTools(applyMiddleware(...middleware));\n    const store = createStore(reducers, initialState, enhancer);\n\n    return <Provider\n        store={store}>\n        {\n            children\n        }\n    </Provider>;\n};\n\nRoot.propTypes = {\n    children: PropTypes.any,\n    shouldLog: PropTypes.bool,\n    initialState: PropTypes.object,\n    middlewares: PropTypes.array\n};\n\nexport default Root;"]},"metadata":{},"sourceType":"module"}