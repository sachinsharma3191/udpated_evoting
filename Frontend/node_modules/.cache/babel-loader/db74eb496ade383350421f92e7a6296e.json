{"ast":null,"code":"var _jsxFileName = \"/Users/sachinsharma/evoting-react/Frontend/src/ElectionResult/ElectionResult.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport _ from \"underscore\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Footer from '../Footer';\n\nclass ElectionResult extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadResult = async () => {\n      this.setState({\n        loading: true\n      });\n      axios.get(\"http://localhost:3002/result/ \" + new Date()).then(res => {\n        if (!_.isEmpty(res.data.elecResult)) {\n          this.setState({\n            result: res.data.elecResult,\n            loading: false\n          });\n        }\n      }).catch(err => {\n        if (!_.isEmpty(err.response)) {\n          this.setState({\n            error: err.response.data.msg,\n            loading: false\n          });\n        } else {\n          this.setState({\n            error: err,\n            loading: false\n          });\n        }\n      });\n    };\n\n    this.state = {\n      result: [],\n      error: null,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadResult();\n  }\n\n  render() {\n    const {\n      result,\n      error,\n      loading\n    } = this.state;\n    let ui = null;\n\n    if (loading) {\n      ui = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n\n    if (!loading && result.length > 0) {\n      ui = result.map(cand => {\n        let id = cand.id;\n        let voteCount = cand.voteCount;\n        const name = cand.first_name + \" \" + cand.last_name;\n        return React.createElement(\"div\", {\n          key: id,\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, name))), React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, voteCount))));\n      });\n    }\n\n    if (!loading && error) {\n      ui = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, error));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, ui), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ElectionResult;","map":{"version":3,"sources":["/Users/sachinsharma/evoting-react/Frontend/src/ElectionResult/ElectionResult.js"],"names":["React","Component","axios","_","Spinner","Footer","ElectionResult","constructor","props","loadResult","setState","loading","get","Date","then","res","isEmpty","data","elecResult","result","catch","err","response","error","msg","state","componentDidMount","render","ui","length","map","cand","id","voteCount","name","first_name","last_name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,YAAd;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AACrCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,UAbmB,GAaN,YAAY;AACvB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAT,MAAAA,KAAK,CACFU,GADH,CACO,mCAAmC,IAAIC,IAAJ,EAD1C,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb,YAAI,CAACZ,CAAC,CAACa,OAAF,CAAUD,GAAG,CAACE,IAAJ,CAASC,UAAnB,CAAL,EAAqC;AACnC,eAAKR,QAAL,CAAc;AAAES,YAAAA,MAAM,EAAEJ,GAAG,CAACE,IAAJ,CAASC,UAAnB;AAA+BP,YAAAA,OAAO,EAAE;AAAxC,WAAd;AACD;AACF,OANH,EAOGS,KAPH,CAOUC,GAAD,IAAS;AACd,YAAI,CAAClB,CAAC,CAACa,OAAF,CAAUK,GAAG,CAACC,QAAd,CAAL,EAA8B;AAC5B,eAAKZ,QAAL,CAAc;AAAEa,YAAAA,KAAK,EAAEF,GAAG,CAACC,QAAJ,CAAaL,IAAb,CAAkBO,GAA3B;AAAgCb,YAAAA,OAAO,EAAE;AAAzC,WAAd;AACD,SAFD,MAEO;AACL,eAAKD,QAAL,CAAc;AAAEa,YAAAA,KAAK,EAAEF,GAAT;AAAcV,YAAAA,OAAO,EAAE;AAAvB,WAAd;AACD;AACF,OAbH;AAcD,KA7BkB;;AAEjB,SAAKc,KAAL,GAAa;AACXN,MAAAA,MAAM,EAAE,EADG;AAEXI,MAAAA,KAAK,EAAE,IAFI;AAGXZ,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAEDe,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,UAAL;AACD;;AAoBDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,MAAF;AAAUI,MAAAA,KAAV;AAAiBZ,MAAAA;AAAjB,QAA6B,KAAKc,KAAxC;AACA,QAAIG,EAAE,GAAG,IAAT;;AACA,QAAIjB,OAAJ,EAAa;AACXiB,MAAAA,EAAE,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL;AACD;;AACD,QAAI,CAACjB,OAAD,IAAYQ,MAAM,CAACU,MAAP,GAAgB,CAAhC,EAAmC;AACjCD,MAAAA,EAAE,GAAGT,MAAM,CAACW,GAAP,CAAYC,IAAD,IAAU;AACxB,YAAIC,EAAE,GAAGD,IAAI,CAACC,EAAd;AACA,YAAIC,SAAS,GAAGF,IAAI,CAACE,SAArB;AACA,cAAMC,IAAI,GAAGH,IAAI,CAACI,UAAL,GAAkB,GAAlB,GAAwBJ,IAAI,CAACK,SAA1C;AACA,eACE;AAAK,UAAA,GAAG,EAAEJ,EAAV;AAAc,UAAA,SAAS,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKE,IAAL,CADF,CADF,CADF,EAME;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,SAAL,CADF,CADF,CANF,CADF;AAcD,OAlBI,CAAL;AAmBD;;AACD,QAAI,CAACtB,OAAD,IAAaY,KAAjB,EAAwB;AACtBK,MAAAA,EAAE,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,KAAL,CADF,CADF;AAKD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCK,EADD,CADF,EAIA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CADF;AAQD;;AA1EoC;;AA6EvC,eAAetB,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport _ from \"underscore\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Footer from '../Footer';\n\nclass ElectionResult extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: [],\n      error: null,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.loadResult();\n  }\n\n  loadResult = async () => {\n    this.setState({ loading: true });\n    axios\n      .get(\"http://localhost:3002/result/ \" + new Date())\n      .then((res) => {\n        if (!_.isEmpty(res.data.elecResult)) {\n          this.setState({ result: res.data.elecResult, loading: false });\n        }\n      })\n      .catch((err) => {\n        if (!_.isEmpty(err.response)) {\n          this.setState({ error: err.response.data.msg, loading: false });\n        } else {\n          this.setState({ error: err, loading: false });\n        }\n      });\n  };\n\n  render() {\n    const { result, error, loading } = this.state;\n    let ui = null;\n    if (loading) {\n      ui = <Spinner />;\n    }\n    if (!loading && result.length > 0) {\n      ui = result.map((cand) => {\n        let id = cand.id;\n        let voteCount = cand.voteCount;\n        const name = cand.first_name + \" \" + cand.last_name;\n        return (\n          <div key={id} className=\"row\">\n            <div className=\"col-md-6\">\n              <span>\n                <h2>{name}</h2>\n              </span>\n            </div>\n            <div className=\"col-md-6\">\n              <span>\n                <h4>{voteCount}</h4>\n              </span>\n            </div>\n          </div>\n        );\n      });\n    }\n    if (!loading  && error) {\n      ui = (\n        <span>\n          <h2>{error}</h2>\n        </span>\n      );\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n        {ui}  \n        </div>\n      <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default ElectionResult;"]},"metadata":{},"sourceType":"module"}