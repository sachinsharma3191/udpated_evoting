{"ast":null,"code":"var _jsxFileName = \"/Users/sachinsharma/evoting-react/Frontend/src/Candidate/Candidates.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport _ from \"underscore\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Candidate from \"./Candidate\";\nimport * as actions from \"../redux/actions/index\";\nconst style = {\n  width: \"30%\",\n  marginLeft: \"30%\",\n  height: \"50px\",\n  marginTop: \"40px\",\n  marginBottom: \"30px\",\n  fontSize: \"20px\"\n};\n\nclass Candidates extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.props.onFetchCandidates();\n      axios.get(\"http://localhost:3002/candidate/all\").then(res => {\n        this.setState({\n          candidates: res.data.data,\n          loading: false\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          error: error,\n          loading: false\n        });\n      });\n    };\n\n    this.arrayBufferToBase64 = buffer => {\n      var binary = \"\";\n      var bytes = [].slice.call(new Uint8Array(buffer));\n      bytes.forEach(b => binary += String.fromCharCode(b));\n      return window.btoa(binary);\n    };\n\n    this.showDetails = id => {\n      if (!_.isEmpty(id)) {\n        const candidate = this.state.candidates.filter(candidate => candidate.id === id);\n        this.props.history.push({\n          pathname: \"/CandidateDetail\",\n          state: {\n            candidateDetails: candidate\n          }\n        });\n      }\n    };\n\n    this.state = {\n      candidates: [],\n      error: null,\n      voter: 0,\n      candidate: 0,\n      loading: true,\n      success: null\n    };\n    this.showDetails = this.showDetails.bind(this);\n    this.vote = this.vote.bind(this);\n    this.handleCandidateChange = this.handleCandidateChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.candidates !== nextProps.candidates) {\n      return {\n        candidates: nextProps.candidates\n      };\n    }\n\n    return null;\n  }\n\n  handleCandidateChange(event) {\n    this.setState({\n      candidate: event.target.value\n    });\n  }\n\n  vote() {\n    console.log(this.state.candidate);\n\n    if (this.state.candidate !== 0) {\n      let formData = {\n        voter: localStorage.getItem(\"userid\"),\n        candidate: this.state.candidate\n      };\n      console.log(formData);\n      axios.post(\"http://localhost:3002/vote\", formData).then(res => {\n        console.log(res);\n        alert(res.data.msg);\n      }).catch(err => {\n        alert(err.response.data.msg);\n        this.setState({\n          error: err.response.data.msg\n        });\n      });\n    } else {\n      alert(\"Select Candidate\");\n    }\n  }\n\n  render() {\n    const {\n      loading,\n      candidates\n    } = this.state;\n    let dropDown = null;\n    let button = null;\n    let ui = null;\n\n    if (loading && _.isEmpty(candidates)) {\n      ui = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n    }\n\n    if (!_.isEmpty(candidates)) {\n      ui = candidates.map(candidate => {\n        return React.createElement(Candidate, {\n          showDetails: this.showDetails,\n          key: candidate.id,\n          candidate: candidate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        });\n      });\n      dropDown = React.createElement(\"select\", {\n        style: style,\n        onChange: this.handleCandidateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Select Candidate for Vote\"), candidates.map(candidate => React.createElement(\"option\", {\n        key: candidate.id,\n        value: candidate.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, candidate.first_name + \" \" + candidate.last_name)));\n      button = React.createElement(\"div\", {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn primary\",\n        onClick: this.vote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Vote\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, dropDown, button, ui);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.candidate.loading,\n    error: state.candidate.error,\n    candidates: state.candidate.candidates\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchCandidates: () => dispatch(actions.fetchCandidate())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Candidates));","map":{"version":3,"sources":["/Users/sachinsharma/evoting-react/Frontend/src/Candidate/Candidates.js"],"names":["React","Component","connect","axios","withRouter","_","Spinner","Candidate","actions","style","width","marginLeft","height","marginTop","marginBottom","fontSize","Candidates","constructor","props","componentDidMount","onFetchCandidates","get","then","res","setState","candidates","data","loading","catch","error","console","log","arrayBufferToBase64","buffer","binary","bytes","slice","call","Uint8Array","forEach","b","String","fromCharCode","window","btoa","showDetails","id","isEmpty","candidate","state","filter","history","push","pathname","candidateDetails","voter","success","bind","vote","handleCandidateChange","getDerivedStateFromProps","nextProps","prevState","event","target","value","formData","localStorage","getItem","post","alert","msg","err","response","render","dropDown","button","ui","map","first_name","last_name","mapStateToProps","mapDispatchToProps","dispatch","fetchCandidate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport _ from \"underscore\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Candidate from \"./Candidate\";\nimport * as actions from \"../redux/actions/index\";\n\nconst style = {\n  width: \"30%\",\n  marginLeft: \"30%\",\n  height: \"50px\",\n  marginTop: \"40px\",\n  marginBottom: \"30px\",\n  fontSize: \"20px\"\n};\n\nclass Candidates extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      candidates: [],\n      error: null,\n      voter: 0,\n      candidate: 0,\n      loading: true,\n      success: null,\n    };\n    this.showDetails = this.showDetails.bind(this);\n    this.vote = this.vote.bind(this);\n    this.handleCandidateChange = this.handleCandidateChange.bind(this);\n  }\n\n  componentDidMount = async () => {\n    this.props.onFetchCandidates();\n    axios\n      .get(\"http://localhost:3002/candidate/all\")\n      .then((res) => {\n        this.setState({ candidates: res.data.data, loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ error: error, loading: false });\n      });\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.candidates !== nextProps.candidates) {\n      return {\n        candidates: nextProps.candidates,\n      };\n    }\n    return null;\n  }\n\n  arrayBufferToBase64 = (buffer) => {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\n    return window.btoa(binary);\n  };\n\n  showDetails = (id) => {\n    if (!_.isEmpty(id)) {\n      const candidate = this.state.candidates.filter(\n        (candidate) => candidate.id === id\n      );\n      this.props.history.push({\n        pathname: \"/CandidateDetail\",\n        state: { candidateDetails: candidate },\n      });\n    }\n  };\n\n  handleCandidateChange(event) {\n    this.setState({ candidate: event.target.value });\n  }\n\n  vote() {\n    console.log(this.state.candidate);\n    if (this.state.candidate !== 0) {\n      let formData = {\n        voter: localStorage.getItem(\"userid\"),\n        candidate: this.state.candidate,\n      };\n      console.log(formData);\n      axios\n        .post(\"http://localhost:3002/vote\", formData)\n        .then((res) => {\n          console.log(res);\n          alert(res.data.msg);\n        })\n        .catch((err) => {\n          alert(err.response.data.msg);\n          this.setState({error : err.response.data.msg});\n        });\n    } else {\n      alert(\"Select Candidate\");\n    }\n  }\n\n  render() {\n    const { loading, candidates } = this.state;\n    let dropDown = null;\n    let button = null;\n    let ui = null;\n    if (loading && _.isEmpty(candidates)) {\n      ui = <Spinner />;\n    }\n    if (!_.isEmpty(candidates)) {\n      ui = candidates.map((candidate) => {\n        return (\n          <Candidate\n            showDetails={this.showDetails}\n            key={candidate.id}\n            candidate={candidate}\n          />\n        );\n      });\n\n      dropDown = (\n        <select style={style} onChange={this.handleCandidateChange}>\n          <option>Select Candidate for Vote</option>\n          {candidates.map((candidate) => (\n            <option key={candidate.id} value={candidate.id}>\n              {candidate.first_name + \" \" + candidate.last_name}\n            </option>\n          ))}\n        </select>\n      );\n\n      button = (\n        <div style={style}>\n          <button className=\"btn btn primary\" onClick={this.vote}>\n            Vote\n          </button>\n        </div>\n      );\n    }\n    return (\n      <div className=\"row\">\n        {dropDown}\n        {button}\n        {ui}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.candidate.loading,\n    error: state.candidate.error,\n    candidates: state.candidate.candidates,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchCandidates: () => dispatch(actions.fetchCandidate()),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Candidates)\n);\n"]},"metadata":{},"sourceType":"module"}